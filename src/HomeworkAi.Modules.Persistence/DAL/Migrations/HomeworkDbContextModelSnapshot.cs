// <auto-generated />
using System;
using HomeworkAi.Modules.Persistence.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace HomeworkAi.Modules.Persistence.DAL.Migrations
{
    [DbContext(typeof(HomeworkDbContext))]
    partial class HomeworkDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("HomeworkAi.Modules.Persistence.DAL.Entities.ClosedAnswerExerciseEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int?>("AmountOfSentences")
                        .HasColumnType("integer");

                    b.Property<bool>("CheckedByTeacher")
                        .HasColumnType("boolean");

                    b.Property<bool?>("DescriptionInMotherLanguage")
                        .HasColumnType("boolean");

                    b.Property<bool>("ExerciseHeaderInMotherLanguage")
                        .HasColumnType("boolean");

                    b.Property<string>("ExerciseJson")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<string>("ExerciseType")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<bool?>("FirstConditional")
                        .HasColumnType("boolean");

                    b.Property<string>("GrammarSection")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("MotherLanguage")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<bool?>("QuestionsInMotherLanguage")
                        .HasColumnType("boolean");

                    b.Property<bool?>("SecondConditional")
                        .HasColumnType("boolean");

                    b.Property<string>("TargetLanguage")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("TargetLanguageLevel")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<bool?>("ThirdConditional")
                        .HasColumnType("boolean");

                    b.Property<string>("TopicsOfSentences")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<bool?>("TranslateFromMotherLanguage")
                        .HasColumnType("boolean");

                    b.Property<bool?>("ZeroConditional")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("ExerciseType")
                        .HasDatabaseName("ClosedAnswer_NcIx_ExerciseType");

                    b.ToTable("ClosedAnswerExercises");
                });

            modelBuilder.Entity("HomeworkAi.Modules.Persistence.DAL.Entities.OpenAnswerExerciseEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int?>("AmountOfSentences")
                        .HasColumnType("integer");

                    b.Property<bool>("CheckedByTeacher")
                        .HasColumnType("boolean");

                    b.Property<bool>("ExerciseHeaderInMotherLanguage")
                        .HasColumnType("boolean");

                    b.Property<string>("ExerciseJson")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<string>("ExerciseType")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<bool?>("FirstConditional")
                        .HasColumnType("boolean");

                    b.Property<string>("GrammarSection")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("MotherLanguage")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<bool?>("QuestionsInMotherLanguage")
                        .HasColumnType("boolean");

                    b.Property<bool?>("SecondConditional")
                        .HasColumnType("boolean");

                    b.Property<bool?>("ShowFirstForm")
                        .HasColumnType("boolean");

                    b.Property<bool?>("ShowMotherLanguage")
                        .HasColumnType("boolean");

                    b.Property<string>("TargetLanguage")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("TargetLanguageLevel")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<bool?>("ThirdConditional")
                        .HasColumnType("boolean");

                    b.Property<string>("TopicsOfSentences")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<bool?>("TranslateFromMotherLanguage")
                        .HasColumnType("boolean");

                    b.Property<bool?>("ZeroConditional")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("ExerciseType")
                        .HasDatabaseName("OpenAnswer_NcIx_ExerciseType");

                    b.ToTable("OpenAnswerExercises");
                });

            modelBuilder.Entity("HomeworkAi.Modules.Persistence.DAL.Entities.OpenFormExerciseEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("CheckedByTeacher")
                        .HasColumnType("boolean");

                    b.Property<bool>("ExerciseHeaderInMotherLanguage")
                        .HasColumnType("boolean");

                    b.Property<string>("ExerciseJson")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<string>("ExerciseType")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("GrammarSection")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("MotherLanguage")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("TargetLanguage")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("TargetLanguageLevel")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("TopicsOfSentences")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.HasKey("Id");

                    b.HasIndex("ExerciseType")
                        .HasDatabaseName("OpenForm_NcIx_ExerciseType");

                    b.ToTable("OpenFormExercises");
                });

            modelBuilder.Entity("HomeworkAi.Modules.Persistence.DAL.Entities.SuspiciousPromptEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.HasKey("Id");

                    b.HasIndex("Reason")
                        .HasDatabaseName("SuspiciousPrompt_NcIx_Reason");

                    b.ToTable("SuspiciousPrompts");
                });
#pragma warning restore 612, 618
        }
    }
}
